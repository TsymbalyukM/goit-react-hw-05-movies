{"version":3,"file":"static/js/597.670c31bf.chunk.js","mappings":"uMA8CA,UAxCa,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAKA,OAJAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACd,WAAAC,EAAAA,EAAAA,IAAWN,UAAX,SAAgBO,KAAKH,EACtB,GAAE,CAACJ,IAGFG,IACE,4BACE,wBAAI,WACJ,wBACqB,IAAlBA,EAAOK,QACN,uBAAG,2CAEHL,EAAOM,KAAI,WAA8CC,GAA9C,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,SAAlC,OACT,2BACE,yBAAG,cAAYD,GAAa,WAC5B,yBAAG,SAAOD,GAAQ,WAClB,SAAC,IAAD,CAASG,MAAO,IAAKC,IAAKL,EAAcM,IAAKL,KAC7C,oBAJF,UAAYE,EAAZ,YAAwBJ,GADf,QAatB,C,mCCpBD,IAbA,YAAuC,IAApBM,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,IAAKF,EAAS,EAATA,MAC3B,OACE,gBACEA,MAAOA,EACPG,IACEF,EANK,kCAOMA,EADR,qFAILC,IAAKA,GAGV,C,+LCXKE,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GACrBH,EAAQ,mCAA+BC,IAFpC,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wFACkBL,EAAAA,EAAAA,GACrBH,EAAQ,+BACkBC,EADlB,4DAC6EO,IAHlF,cACCJ,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5B,GAA/B,wFACkBsB,EAAAA,EAAAA,GACrBH,EAAQ,gBAAYnB,EAAZ,oBAA0BoB,EAA1B,oBAFL,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAA0BN,GAA1B,wFACkBsB,EAAAA,EAAAA,GACrBH,EAAQ,gBAAYnB,EAAZ,4BAAkCoB,EAAlC,oBAFL,cACCG,EADD,yBAIEA,EAASC,KAAKK,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0B9B,GAA1B,wFACkBsB,EAAAA,EAAAA,GACrBH,EAAQ,gBAAYnB,EAAZ,4BAAkCoB,EAAlC,2BAFL,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kE","sources":["components/Cast.jsx","components/Picture.jsx","services/Api.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCredits } from '../services/Api';\nimport PropTypes from 'prop-types';\nimport Picture from './Picture';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [actors, setActors] = useState(null);\n  useEffect(() => {\n    getCredits(id)?.then(setActors);\n  }, [id]);\n\n  return (\n    actors && (\n      <div>\n        <h2>Cast:</h2>\n        <ul>\n          {actors.length === 0 ? (\n            <p>We don't have any casts for this movie</p>\n          ) : (\n            actors.map(({ profile_path, name, character, actor_id }, index) => (\n              <li key={`${actor_id}-${index}`}>\n                <p>Character: {character || 'none'}</p>\n                <p>Name: {name || 'none'}</p>\n                <Picture width={100} url={profile_path} alt={name} />\n                <br />\n              </li>\n            ))\n          )}\n        </ul>\n      </div>\n    )\n  );\n};\n\nCast.propTypes = {\n  actors: PropTypes.arrayOf(\n    PropTypes.shape({\n      profile_path: PropTypes.string,\n      name: PropTypes.string,\n      character: PropTypes.string,\n      actor_id: PropTypes.number,\n    })\n  ),\n};\nexport default Cast;\n","const BASE = 'https://image.tmdb.org/t/p/w500';\nfunction Picture({ url, alt, width }) {\n  return (\n    <img\n      width={width}\n      src={\n        url\n          ? BASE + url\n          : `https://crawfordroofing.com.au/wp-content/uploads/2018/04/No-image-available-2.jpg`\n      }\n      alt={alt}\n    />\n  );\n}\nexport default Picture;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b1c5726376c451f621f2d4b8c84b5c09';\n\nexport async function getTrending() {\n  const response = await axios(\n    BASE_URL + `trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\nexport async function searchByKeyword(q) {\n  const response = await axios(\n    BASE_URL +\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${q}`\n  );\n  return response.data.results;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios(\n    BASE_URL + `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getCredits(id) {\n  const response = await axios(\n    BASE_URL + `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function getReviews(id) {\n  const response = await axios(\n    BASE_URL + `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["id","useParams","useState","actors","setActors","useEffect","getCredits","then","length","map","index","profile_path","name","character","actor_id","width","url","alt","src","BASE_URL","API_KEY","getTrending","axios","response","data","results","searchByKeyword","q","getMovieDetails","cast","getReviews"],"sourceRoot":""}