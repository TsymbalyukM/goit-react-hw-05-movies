{"version":3,"file":"static/js/884.ded72b45.chunk.js","mappings":"mJAcA,IAbA,YAAuC,IAApBA,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,IAAKC,EAAS,EAATA,MAC3B,OACE,gBACEA,MAAOA,EACPC,IACEH,EANK,kCAOMA,EADR,qFAILC,IAAKA,GAGV,C,+FCmDD,UA3DqB,WAAO,IAAD,EACzB,GAA8BG,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,SAOIH,QAPJ,IAOIA,EAAAA,EAAW,CAAC,EAPhB,IACEI,YAAAA,OADF,MACgB,GADhB,MAEEC,eAAAA,OAFF,MAEmB,GAFnB,MAGEC,KAAAA,OAHF,MAGS,GAHT,MAIEC,aAAAA,OAJF,MAIiB,GAJjB,MAKEC,OAAAA,OALF,MAKW,GALX,MAMEC,SAAAA,OANF,MAMa,GANb,EASMC,GAASC,EAAAA,EAAAA,SAAO,UAAAT,EAASU,aAAT,eAAgBC,OAAQ,KAEtCC,GAAOC,EAAAA,EAAAA,MAAPD,GAKR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAAII,KAAKjB,EAC1B,GAAE,CAACa,IAEId,GAGN,4BACE,wBACE,SAAC,KAAD,CAAMmB,GAAIT,EAAOU,QAAjB,SAA0B,eAE5B,gCACE,SAAC,IAAD,CAASvB,MAAO,IAAKF,IAAKS,EAAaR,IAAKU,KAC5C,4BACE,0BACGD,GACD,4BAAM,KAAGE,EAAac,UAAU,EAAG,GAAG,WAExC,0BAAI,YAEF,4BAAM,IAAEb,EAAOc,KAAI,qBAAGhB,IAAH,IAAoBiB,KAAK,aAE9C,wBAAI,eACJ,uBAAId,WAGR,mBACA,uBAAG,6BACH,2BACE,yBACE,SAAC,KAAD,CAAMU,GAAI,OAAV,SAAkB,YAEpB,yBACE,SAAC,KAAD,CAAMA,GAAI,UAAV,SAAqB,kBAGzB,SAAC,EAAAK,SAAD,WACE,SAAC,KAAD,UAhCJ,uBAAG,yBAoCN,C,+LC5DKC,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GACrBH,EAAQ,mCAA+BC,IAFpC,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wFACkBL,EAAAA,EAAAA,GACrBH,EAAQ,+BACkBC,EADlB,4DAC6EO,IAHlF,cACCJ,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAed,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,wFACkBc,EAAAA,EAAAA,GACrBH,EAAQ,gBAAYX,EAAZ,oBAA0BY,EAA1B,oBAFL,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BpB,GAA1B,wFACkBc,EAAAA,EAAAA,GACrBH,EAAQ,gBAAYX,EAAZ,4BAAkCY,EAAlC,oBAFL,cACCG,EADD,yBAIEA,EAASC,KAAKK,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BtB,GAA1B,wFACkBc,EAAAA,EAAAA,GACrBH,EAAQ,gBAAYX,EAAZ,4BAAkCY,EAAlC,2BAFL,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kE","sources":["components/Picture.jsx","pages/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["const BASE = 'https://image.tmdb.org/t/p/w500';\nfunction Picture({ url, alt, width }) {\n  return (\n    <img\n      width={width}\n      src={\n        url\n          ? BASE + url\n          : `https://crawfordroofing.com.au/wp-content/uploads/2018/04/No-image-available-2.jpg`\n      }\n      alt={alt}\n    />\n  );\n}\nexport default Picture;\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense, useRef } from 'react';\nimport { getMovieDetails } from '../services/Api';\nimport Picture from '../components/Picture'\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState(null);\n  const location = useLocation();\n\n  const {\n    poster_path = '',\n    original_title = '',\n    name = '',\n    release_date = '',\n    genres = '',\n    overview = '',\n  } = details ?? {};\n\n  const goBack = useRef(location.state?.from || '/');\n\n  const { id } = useParams();\n  useEffect(() => {\n    getMovieDetails(id).then(setDetails);\n  }, [id]);\n\n  return !details ? (\n    <p>Don't find this movie</p>\n  ) : (\n    <div>\n      <p>\n        <Link to={goBack.current}>Go back</Link>\n      </p>\n      <article>\n        <Picture width={200} url={poster_path} alt={name}></Picture>\n        <div>\n          <h2>\n            {original_title}\n            <span> ({release_date.substring(0, 4)})</span>\n          </h2>\n          <h3>\n            Genries:\n            <span> {genres.map(({ name }) => name).join(', ')}</span>\n          </h3>\n          <h3>Overview:</h3>\n          <p>{overview}</p>\n        </div>\n      </article>\n      <hr />\n      <p>Additional information:</p>\n      <ul>\n        <li>\n          <Link to={'cast'}>Cast</Link>\n        </li>\n        <li>\n          <Link to={'reviews'}>Reviews</Link>\n        </li>\n      </ul>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b1c5726376c451f621f2d4b8c84b5c09';\n\nexport async function getTrending() {\n  const response = await axios(\n    BASE_URL + `trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\nexport async function searchByKeyword(q) {\n  const response = await axios(\n    BASE_URL +\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${q}`\n  );\n  return response.data.results;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios(\n    BASE_URL + `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getCredits(id) {\n  const response = await axios(\n    BASE_URL + `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function getReviews(id) {\n  const response = await axios(\n    BASE_URL + `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["url","alt","width","src","useState","details","setDetails","location","useLocation","poster_path","original_title","name","release_date","genres","overview","goBack","useRef","state","from","id","useParams","useEffect","getMovieDetails","then","to","current","substring","map","join","Suspense","BASE_URL","API_KEY","getTrending","axios","response","data","results","searchByKeyword","q","getCredits","cast","getReviews"],"sourceRoot":""}