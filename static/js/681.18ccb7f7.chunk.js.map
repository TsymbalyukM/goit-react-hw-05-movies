{"version":3,"file":"static/js/681.18ccb7f7.chunk.js","mappings":"8LAwCA,UAnCgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACd,WAAAC,EAAAA,EAAAA,IAAWN,UAAX,SAAgBO,KAAKH,EACtB,GAAE,CAACJ,EAAD,OAAKG,QAAL,IAAKA,OAAL,EAAKA,EAASK,UAGf,4BACE,wBAAI,cACJ,wBACuB,KAAb,OAAPL,QAAO,IAAPA,OAAA,EAAAA,EAASK,SACR,uBAAG,0CADJ,OAGCL,QAHD,IAGCA,OAHD,EAGCA,EAASM,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASX,EAApB,EAAoBA,GAApB,OACX,2BACE,0BAAI,WAASU,MACb,yBAAG,IAAEC,MAEL,mBACA,oBALOX,EADE,QAatB,C,+LC/BKY,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GACrBH,EAAQ,mCAA+BC,IAFpC,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wFACkBL,EAAAA,EAAAA,GACrBH,EAAQ,+BACkBC,EADlB,4DAC6EO,IAHlF,cACCJ,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BrB,GAA/B,wFACkBe,EAAAA,EAAAA,GACrBH,EAAQ,gBAAYZ,EAAZ,oBAA0Ba,EAA1B,oBAFL,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BtB,GAA1B,wFACkBe,EAAAA,EAAAA,GACrBH,EAAQ,gBAAYZ,EAAZ,4BAAkCa,EAAlC,oBAFL,cACCG,EADD,yBAIEA,EAASC,KAAKM,MAJhB,kEAOA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAA0BN,GAA1B,wFACkBe,EAAAA,EAAAA,GACrBH,EAAQ,gBAAYZ,EAAZ,4BAAkCa,EAAlC,2BAFL,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kE","sources":["components/Reviews.jsx","services/Api.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getReviews } from '../services/Api';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    getReviews(id)?.then(setReviews);\n  }, [id, reviews?.length]);\n\n  return (\n    <div>\n      <h3>Reviews:</h3>\n      <ul>\n        {reviews?.length === 0 ? (\n          <p>We don't have a review for this movie</p>\n        ) : (\n          reviews?.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p> {content}</p>\n\n              <br />\n              <br />\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\nReviews.propTypes = {\n  width: PropTypes.number,\n  url: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b1c5726376c451f621f2d4b8c84b5c09';\n\nexport async function getTrending() {\n  const response = await axios(\n    BASE_URL + `trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\nexport async function searchByKeyword(q) {\n  const response = await axios(\n    BASE_URL +\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${q}`\n  );\n  return response.data.results;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios(\n    BASE_URL + `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getCredits(id) {\n  const response = await axios(\n    BASE_URL + `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function getReviews(id) {\n  const response = await axios(\n    BASE_URL + `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n"],"names":["id","useParams","useState","reviews","setReviews","useEffect","getReviews","then","length","map","author","content","BASE_URL","API_KEY","getTrending","axios","response","data","results","searchByKeyword","q","getMovieDetails","getCredits","cast"],"sourceRoot":""}